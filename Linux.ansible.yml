---
- name: Install and configure AD authentication
  hosts: all
  gather_facts: no
  become: yes
  become_user: root
  become_method: sudo


  tasks:
    - name: Install the required packages
      yum:
        name: realmd,sssd,oddjob,oddjob-mkhomedir,adcli,samba-common,samba-common-tools,python-pip,cifs-utils
        state: present
      notify:
        - restart realmd

    - name: Install pexpect using pip
      pip:
        name: pexpect

    - name: setting hostname
      hostname:
        name: "{{ instancename }}"

    - name: Set timezone to NewYork
      ansible.builtin.shell: timedatectl set-timezone America/New_York

    - name: join system to ad
      expect:
        command: "sudo realm join {{ domain_name }} --computer-ou='{{ distinguishedname }}' -U '{{ domain_join_user }}@{{ domain_name }}'"
        responses:
          Password for *: "{{ domain_user_pass }}"
    
    - name: Copy sssd.conf file from ansible server to dest server
      copy:
        src: '{{ working_directory }}/Files/sssd.conf.{{ domain_name }}'
        dest: /etc/sssd/sssd.conf
      notify:
        - restart sssd

    - name: Copy sudoers.d file from ansible server to dest server
      copy:
        src: '{{ working_directory }}/Files/00-local-admin-rule'
        dest: /etc/sudoers.d/00-local-admin-rule
      notify:
        - restart sssd

    - name: Copy sshd_config file from ansible server to dest server
      copy:
        src: '{{ working_directory }}/Files/sshd_config'
        dest: /etc/ssh/sshd_config
      notify:
        - restart sshd

    # install CIS Standard
    - name: create directory for CIS-Standard
      ansible.builtin.file:
        path: /etc/CIS-Standard
        state: directory
        mode: '0755'

    - name: Copy CIS tar file
      copy:
        src: '{{ working_directory }}/Files/cis-lbk_amazon_linux_2.tar.gz'
        dest: /etc/CIS-Standard/cis-lbk_amazon_linux_2.tar.gz

    - name: open CIS tar file
      ansible.builtin.unarchive:
        src: /etc/CIS-Standard/cis-lbk_amazon_linux_2.tar.gz
        dest: /etc/CIS-Standard
        remote_src: yes
    
    - name: remove 4.1.7 from cis file
      replace:
        path: /etc/CIS-Standard/CIS-LBK/amazon_linux_2/cis-lbk_amazon_linux_2.sh
        after: 'RN="4.1.7"'
        before: 'RN="4.1.8"'
        regexp: '^(.+)$'
        replace: ''

    - name: remove 5.4.2 from cis file
      replace:
        path: /etc/CIS-Standard/CIS-LBK/amazon_linux_2/cis-lbk_amazon_linux_2.sh
        after: 'RN="5.4.2"'
        before: 'RN="5.4.3"'
        regexp: '^(.+)$'
        replace: ''

    - name: install CIS-Standard
      ansible.builtin.shell: cd /etc/CIS-Standard/CIS-LBK/amazon_linux_2/ && sudo ./cis-lbk_amazon_linux_2.sh

    #add local user crbadmin as sudo with ssh keys
    - name: Create a user
      user:
        name: crbadmin
        state: present
        createhome: yes
        shell: /bin/bash

    - name: Add public key
      authorized_key:
        user: crbadmin
        state: present
        key: "{{ crbadmin_public_ssh_key }}"

    - name: add crbadmin to sudoers
      lineinfile:
        dest: /etc/sudoers.d/00-local-admin-rule
        insertafter: '"secaws_ec2" ALL=(ALL) NOPASSWD:ALL'
        line: "crbadmin ALL=(ALL) NOPASSWD:ALL"
        validate: visudo -cf %s
        state: present

    #install Tanium agent
    - name: Create Tanium directory
      file:
        path: /opt/tanium
        state: directory

    - name: Copy Zip file
      copy:
        src: '{{ working_directory }}/Files/linux-client-bundle.zip'
        dest: /opt/tanium/linux-client-bundle

    - name: Unzip the file
      unarchive:
        src: /opt/tanium/linux-client-bundle
        dest: /opt/tanium/
        remote_src: yes

    - name: run the rpm file
      yum:
        name: /opt/tanium/TaniumClient-7.4.10.1034-1.amzn2.x86_64.rpm
        state: present
      become: true

    - name: move the dat file
      copy:
        src: /opt/tanium/tanium-init.dat
        dest: /opt/Tanium/TaniumClient/
        remote_src: yes

    - name: run configuration for agent
      shell: |
        /opt/Tanium/TaniumClient/TaniumClient config set ServerName crossriver.cloud.tanium.com

    - name: start tanium service
      service:
        name: taniumclient.service
        state: started

    #restart sshd
    - name: restart sshd service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: sshd

    - name: make agents directory
      file:
        path: /etc/agents
        state: directory

    - name: copy agent directory content
      copy:
        src: "{{ item }}"
        dest: /etc/agents/
        mode: 755
      with_fileglob:
        - '{{ working_directory }}/agents/*'
    
    - name: installing Agents
      shell: |
        sudo AWN_CUSTOMER_JSON=/etc/agents/customer.json yum install /etc/agents/arcticwolfagent-2022.03.52-1.x86_64.rpm -y
        sudo yum install /etc/agents/falcon-sensor-7.02.0-15705.amzn2.x86_64.rpm -y
        sudo /opt/CrowdStrike/falconctl -s --cid=A7FBB41C04E74C8685AF5AA0A051736A-D5
        sudo systemctl start falcon-sensor
        sudo rpm -ivh /etc/agents/QualysCloudAgent.rpm
        sudo /usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh ActivationId=c57f6759-aa85-447b-b088-39456001dd42 CustomerId=2f2df9f3-b9cf-fccb-83ed-778fb67715a2

  #restart handlers
  handlers:
    - name: restart realmd
      service:
        name: realmd
        state: restarted

    - name: restart sssd
      service:
        name: sssd
        state: restarted

    - name: restart sshd
      service:
        name: sshd
        state: restarted
